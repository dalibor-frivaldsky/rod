// Copyright Dalibor Frivaldsky 2017
// Distributed under the Boost Software License, Version 1.0.
// See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt

#pragma once

#include <range/v3/core.hpp>
#include <range/v3/view/transform.hpp>


namespace ranges { 

	template< typename Range >
	decltype(auto) get_impl(Range&& rng) {
		return front(rng);
	}

	template< typename Range, typename C >
	auto get_all_impl(Range&& rng, C&& c) {
		return rng | view::transform(std::forward< C >(c));
	}

}
