#pragma once


#include <boost/hana/for_each.hpp>
#include <rod/get>
#include <rod/feature/instance/instance>
#include <rod/resolve>
#include <rod/source/hana_monad>
#include <rod/source/type_index>
#include <utility>


namespace rod {

	auto erase = [] (auto&& source) {
		source::type_index	erasedSource{};

		boost::hana::for_each(
			source | resolve(feature::query::instance{}),
			[&] (auto&& resolver) {
				erasedSource.register_resolver(std::get<0>(resolver));
			}
		);
		
		return erasedSource;
	};

}
